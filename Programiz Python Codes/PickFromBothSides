#BruteForce Approach
A = [ 2, 3,-1,4,2,1 ]
B = 4
n=len(A)
ans=float("-inf")
for i in range(B+1):
    #print(A[:B-i],sum(A[:B-i]),A[n-i:],sum(A[n-i:]))
    sumOfBElements=sum(A[:B-i])+sum(A[n-i:])
    ans=max(ans,sumOfBElements)
print(ans)

#Optimised Approach
A = [5, -2, 3 , 1, 2]
B = 3
n=len(A)
ans=float("-inf")
prefixArray=[] #[2, 5, 4, 8, 10, 11]
suffixArray=[]  #[1, 3, 7, 6, 9, 11]
temp1=0
temp2=0
for i in range(n):
    temp1+=A[i]
    prefixArray+=[temp1]
    temp2+=A[n-i-1]
    suffixArray+=[temp2]
# print(prefixArray) 
# print(suffixArray)
for i in range(B+1):
    if i==0:
        sumOfBElements=prefixArray[B-1]
        #print(A[:B-i],prefixArray[B-1])
    elif i==B:
        #print(A[n-i:],suffixArray[B-1])
        sumOfBElements=suffixArray[B-1]
    else:
        #print(A[:B-i],prefixArray[B-i-1],A[n-i:],suffixArray[i-1])
        sumOfBElements=prefixArray[B-i-1]+suffixArray[i-1]
    ans=max(ans,sumOfBElements)
print(ans)
