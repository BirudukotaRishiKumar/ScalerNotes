#Given an array of integers A and an integer B, find and return the minimum number of swaps required to bring all the numbers less than or equal to B together.
#Optimised Approach: Sliding Window
a=[8,3,10,20,22,13,1,2,55,5,15,50]
b=5
n=len(a)
k=0 #4
for i in a:
    if i<=b:
        k+=1
badNums=0 
for i in range(k): #First K length Window
    if a[i]>b:
        badNums+=1
#print(badNums) #3
ans=badNums
for i in range(k,n):
    if a[i]>b:
        badNums+=1
    if a[i-k]>b:
        badNums-=1
    ans=min(ans,badNums)
print(ans)
    
    
