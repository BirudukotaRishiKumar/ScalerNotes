#Sum of Elements from l to r indexes of Q quiries

#Bruteforce O(n^2)+O(n)
a=[-3,6,2,4,5,8,-9,3,1]
l=len(a)

q=[[4,8],[3,7],[1,3],[0,4],[7,7]]
l2=len(q)

for i in range(l2):
    li=q[i][0]
    ri=q[i][1]
    s=0
    for j in range(li, ri+1):
        s+=a[j]
    print(s)
    
#Optmized way O(n)+O(n)
a=[-3,6,2,4,5,8,-9,3,1]
l=len(a)

q=[[4,8],[3,7],[1,3],[0,4],[7,7]]
l2=len(q)

prefixArray=[0]*l #Extra space
# s=0
for i in range(l):
    # s+=a[i]
    # prefixArray+=[s]
    prefixArray[i]=prefixArray[i-1]+a[i] #Can use either
print(prefixArray) #[-3, 3, 5, 9, 14, 22, 13, 16, 17]

for i in range(l2):
    li=q[i][0]
    ri=q[i][1]
    
    if li==0:
        s=prefixArray[ri]
    else:
        s=prefixArray[ri]-prefixArray[li-1]
    print(s)

#More Optimised way O(n)+O(1)
a=[-3,6,2,4,5,8,-9,3,1]
l=len(a)
for i in range(1,l): #Instead of prefixArray, Modify the existing array
    a[i]=a[i-1]+a[i]
    print(a)








