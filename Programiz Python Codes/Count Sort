#Sorting array for both negative and positive numbers
        minOfNums=min(nums)
        maxOfNums=max(nums)

        countA=[0]*(maxOfNums-minOfNums+1) #[1,1,1,0,1]
        for num in nums:
            countA[num-minOfNums]+=1  
        
        sortedArray=[] #[1,2,3,4] #[1*(1)+2*(1)+3*(1)+5*(1)]
        lengthOfCountA=len(countA)
        for i in range(lengthOfCountA):
            sortedArray+=[i+minOfNums]*countA[i] 
        return sortedArray
------------------------------------
#Sclaer Solution (uses extra space for the sorted array)
mx = max(A)
        freq = [0 for j in range(mx + 1)]
        for x in A:
            freq[x] += 1
        ans = []
        for i in range(mx + 1):
            for j in range(freq[i]):
                ans.append(i)
        return ans
-------------------------
#My Solution (uses extra space for the sorted array)
m=max(A)
        counterArray=[0]*(m+1)
        for num in A:
            counterArray[num]+=1
        sortedArray=[] 
        for i in range(len(counterArray)):
            sortedArray+=[i]*(counterArray[i])
        return sortedArray
------------------
#Ayush solution (in's place) saves memory
a=[4,2,3,2,9,0,1,6,0,1,2,5,15,12]
a=[90,44,2,0,7]
m=max(a)
freqArray=[0]*(m+1)
for num in a:
    freqArray[num]+=1
print(freqArray) #[2, 2, 3, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]

index=0
for i in range(m+1):
    for j in range(freqArray[i]):
        a[index]=i
        index+=1
print(a)
---------------------
Approach:
1. Find the max Value
2. Create a 0 array of length max+1
3. Count the occurances of elements in array
4. Build the sorted array
    
