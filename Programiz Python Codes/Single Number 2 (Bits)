def singleNumber(self, A):
        ans=0
        for i in range(32):
            count=0
            for num in A:
                if (num&(1<<i))>0:
                    count+=1
            if count%3==1:
                ans=ans|(1<<i)
        return ans
Let us look at every bit position.

Every number that occurs thrice will either contribute 3 ‘1’s or 3 ‘0’s to the position.

The number that occurs once X will contribute exactly one 0 or 1 to the position depending on whether it has 0 or 1 in that position.

So:

If X has 1 in that position, we will have (3x+1) number of 1s in that position.
If X has 0 in that position, we will have (3x+1) number of 0s in that position.
Can you think of a solution using the above observation?
